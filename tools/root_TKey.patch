diff --git a/core/cont/inc/THashTable.h b/core/cont/inc/THashTable.h
index aa08eff..3b725d9 100644
--- core/cont/inc/THashTable.h
+++ core/cont/inc/THashTable.h
@@ -57,6 +57,7 @@ public:
    THashTable(Int_t capacity = TCollection::kInitHashTableCapacity, Int_t rehash = 0);
    virtual       ~THashTable();
    void          Add(TObject *obj);
+   void          AddBefore(const TObject *before, TObject *obj);
    virtual void  AddAll(const TCollection *col);
    Float_t       AverageCollisions() const;
    void          Clear(Option_t *option="");
diff --git a/core/cont/src/THashList.cxx b/core/cont/src/THashList.cxx
index 868cde4..e6e3d6e 100644
--- core/cont/src/THashList.cxx
+++ core/cont/src/THashList.cxx
@@ -119,7 +119,7 @@ void THashList::AddBefore(const TObject *before, TObject *obj)
    // Insert object before object before in the list.
 
    TList::AddBefore(before, obj);
-   fTable->Add(obj);
+   fTable->AddBefore(before, obj);
 }
 
 //______________________________________________________________________________
@@ -128,7 +128,7 @@ void THashList::AddBefore(TObjLink *before, TObject *obj)
    // Insert object before object before in the list.
 
    TList::AddBefore(before, obj);
-   fTable->Add(obj);
+   fTable->AddBefore(before->GetObject(), obj);
 }
 
 //______________________________________________________________________________
diff --git a/core/cont/src/THashTable.cxx b/core/cont/src/THashTable.cxx
index 6a31a1e..a2a5157 100644
--- core/cont/src/THashTable.cxx
+++ core/cont/src/THashTable.cxx
@@ -98,6 +98,32 @@ void THashTable::Add(TObject *obj)
 }
 
 //______________________________________________________________________________
+void THashTable::AddBefore(const TObject *before, TObject *obj)
+{
+   // Add object to the hash table. Its position in the table will be
+   // determined by the value returned by its Hash() function.
+   // If and only if 'before' is in the same bucket as obj, obj is added
+   // in front of 'before' within the bucket's list.
+
+   if (IsArgNull("Add", obj)) return;
+
+   Int_t slot = GetHashValue(obj);
+   if (!fCont[slot]) {
+      fCont[slot] = new TList;
+      fUsedSlots++;
+   }
+   if (before && GetHashValue(before) == slot) {
+      fCont[slot]->AddBefore(before,obj);
+   } else {
+      fCont[slot]->Add(obj);
+   }
+   fEntries++;
+
+   if (fRehashLevel && AverageCollisions() > fRehashLevel)
+      Rehash(fEntries);
+}
+
+//______________________________________________________________________________
 void THashTable::AddAll(const TCollection *col)
 {
    // Add all objects from collection col to this collection.
