diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake
index 9110a4f1be..b26df51b79 100644
--- a/cmake/modules/SearchInstalledSoftware.cmake
+++ b/cmake/modules/SearchInstalledSoftware.cmake
@@ -514,26 +514,44 @@ endif()
 if(opengl AND NOT builtin_glew)
   message(STATUS "Looking for GLEW")
   if(fail-on-missing)
-    find_Package(GLEW REQUIRED)
+    find_package(GLEW REQUIRED)
   else()
-    find_Package(GLEW)
-    # Bug was reported on newer version of CMake on Mac OS X:
-    # https://gitlab.kitware.com/cmake/cmake/-/issues/19662
-    # https://github.com/microsoft/vcpkg/pull/7967
-    if(GLEW_FOUND AND APPLE AND CMAKE_VERSION VERSION_GREATER 3.15)
-      message(FATAL_ERROR "Please enable builtin Glew due bug in latest CMake (use cmake option -Dbuiltin_glew=ON).")
-      unset(GLEW_FOUND)
-    endif()
-    if(NOT GLEW_FOUND)
-      # set variables to emulate find_package(GLEW)
-      set(GLEW_FOUND TRUE CACHE INTERNAL "" FORCE)
-      set(GLEW_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/graf3d/glew/inc CACHE INTERNAL "" FORCE)
-      set(GLEW_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/graf3d/glew/inc CACHE INTERNAL "" FORCE)
-      set(GLEW_LIBRARY GLEW CACHE INTERNAL "" FORCE)
-      set(GLEW_LIBRARIES GLEW CACHE INTERNAL "" FORCE)
-      message(STATUS "GLEW not found. Switching on builtin_glew option")
-      set(builtin_glew ON CACHE BOOL "Enabled because opengl requested and GLEW not found (${builtin_glew_description})" FORCE)
-    endif()
+    find_package(GLEW)
+  endif()
+  # https://gitlab.kitware.com/cmake/cmake/-/issues/19662
+  # Solution by @grdowns: https://github.com/microsoft/vcpkg/pull/7967
+  if(GLEW_FOUND AND TARGET GLEW::GLEW AND NOT DEFINED GLEW_INCLUDE_DIRS)
+    get_target_property(GLEW_INCLUDE_DIRS GLEW::GLEW INTERFACE_INCLUDE_DIRECTORIES)
+    set(GLEW_INCLUDE_DIR ${GLEW_INCLUDE_DIRS})
+    get_target_property(_GLEW_DEFS GLEW::GLEW INTERFACE_COMPILE_DEFINITIONS)
+    if("${_GLEW_DEFS}" MATCHES "GLEW_STATIC")
+      get_target_property(GLEW_LIBRARY_DEBUG GLEW::GLEW IMPORTED_LOCATION_DEBUG)
+      get_target_property(GLEW_LIBRARY_RELEASE GLEW::GLEW IMPORTED_LOCATION_RELEASE)
+    else()
+      get_target_property(GLEW_LIBRARY_DEBUG GLEW::GLEW IMPORTED_IMPLIB_DEBUG)
+      get_target_property(GLEW_LIBRARY_RELEASE GLEW::GLEW IMPORTED_IMPLIB_RELEASE)
+    endif()
+    get_target_property(_GLEW_LINK_INTERFACE GLEW::GLEW IMPORTED_LINK_INTERFACE_LIBRARIES_RELEASE) # same for debug and release
+    list(APPEND GLEW_LIBRARIES ${_GLEW_LINK_INTERFACE})
+    list(APPEND GLEW_LIBRARY ${_GLEW_LINK_INTERFACE})
+    include(SelectLibraryConfigurations)
+    select_library_configurations(GLEW)
+    if("${_GLEW_DEFS}" MATCHES "GLEW_STATIC")
+      set(GLEW_STATIC_LIBRARIES ${GLEW_LIBRARIES})
+    else()
+      set(GLEW_SHARED_LIBRARIES ${GLEW_LIBRARIES})
+    endif()
+    unset(_GLEW_DEFS)
+    unset(_GLEW_LINK_INTERFACE)
+  elseif(NOT GLEW_FOUND)
+    # set variables to emulate find_package(GLEW)
+    set(GLEW_FOUND TRUE CACHE INTERNAL "" FORCE)
+    set(GLEW_INCLUDE_DIR ${PROJECT_SOURCE_DIR}/graf3d/glew/inc CACHE INTERNAL "" FORCE)
+    set(GLEW_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/graf3d/glew/inc CACHE INTERNAL "" FORCE)
+    set(GLEW_LIBRARY GLEW CACHE INTERNAL "" FORCE)
+    set(GLEW_LIBRARIES GLEW CACHE INTERNAL "" FORCE)
+    message(STATUS "GLEW not found. Switching on builtin_glew option")
+    set(builtin_glew ON CACHE BOOL "Enabled because opengl requested and GLEW not found (${builtin_glew_description})" FORCE)
   endif()
 endif()
 
